from pyzabbix import ZabbixAPI
import pandas as pd
from datetime import datetime, timedelta

# Zabbix API credentials
ZABBIX_SERVER = 'http://your_zabbix_server_url/zabbix'
ZABBIX_USER = 'your_username'
ZABBIX_PASSWORD = 'your_password'

# Connect to Zabbix API
zapi = ZabbixAPI(ZABBIX_SERVER)
zapi.login(ZABBIX_USER, ZABBIX_PASSWORD)

# Get current time and calculate the time 30 days ago
now = datetime.now()
thirty_days_ago = now - timedelta(days=30)

# Get all disabled hosts
disabled_hosts = zapi.host.get(
    output=['hostid', 'host', 'name', 'status'],
    filter={'status': '1'}  # 1 indicates a disabled host
)

# Prepare a list to store the results
results = []

# Iterate through disabled hosts
for host in disabled_hosts:
    host_id = host['hostid']
    host_name = host['host']
    host_display_name = host['name']

    # Get the last time the host was disabled
    host_interfaces = zapi.hostinterface.get(hostids=host_id, output=['disable_until'])
    if host_interfaces:
        disable_until = int(host_interfaces[0]['disable_until'])
        disable_time = datetime.fromtimestamp(disable_until)

        # Check if the host has been disabled for more than 30 days
        if disable_time < thirty_days_ago:
            # Get host groups
            host_groups = zapi.hostgroup.get(
                hostids=host_id,
                output=['name']
            )
            host_group_names = [group['name'] for group in host_groups]

            # Get tags
            host_tags = zapi.host.get(
                hostids=host_id,
                output=['tags']
            )
            app_tag_value = ''
            if host_tags and 'tags' in host_tags[0]:
                for tag in host_tags[0]['tags']:
                    if tag['tag'] == 'APP':
                        app_tag_value = tag['value']
                        break

            # Append the result to the list
            results.append({
                'Host Name': host_name,
                'Host Display Name': host_display_name,
                'Host Groups': ', '.join(host_group_names),
                'APP Tag Value': app_tag_value,
                'Disabled Since': disable_time.strftime('%Y-%m-%d %H:%M:%S')
            })

# Convert the results to a DataFrame
df = pd.DataFrame(results)

# Save the DataFrame to an Excel file
output_file = 'disabled_hosts.xlsx'
df.to_excel(output_file, index=False)

print(f"Data saved to {output_file}")
